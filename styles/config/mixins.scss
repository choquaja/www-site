@import "variables";
@import "mixins.mobile";
@import "mixins.movement";

@mixin center-content{
  margin-right:auto;
  margin-left:auto;
}
@mixin global-wrapper {
  @include center-content;
  max-width:$global-width;
  width: 100%;
  padding-right:$gutter;
  padding-left:$gutter;

  @include media('<=tablet'){
    max-width:100%;
  }
}


@mixin ff-heading{
  font-family:$font-headings;
}

@mixin trans {
  transition: $transition;
}

@mixin wiggle-dark($height, $opacity){
  position: relative;
  &::before{
    height: $height;
    opacity:$opacity;
    width: 100%;
    content: '';
    position: absolute;
    bottom: 0;
    left:0;
    background: url("/static/images/wiggle.png") top center repeat;
    background-size:45px;
    z-index:-1;
  }
}

//----------------------------------------------------------------------------------------------------------------------
// Gradients
//----------------------------------------------------------------------------------------------------------------------

@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));
  @return $is-keyword or $is-angle;
}


@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
  background: nth(nth($color-stops, 1), 1);
  background: linear-gradient($direction, $color-stops);
}
